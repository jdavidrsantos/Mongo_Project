{"ast":null,"code":"// export const myMutations =(state) => {\n\nexport var Uploadproducts = function Uploadproducts(state) {};\nexport var increment = function increment(state) {\n  state.count++;\n  state.lastMutation = 'Increment';\n};\nexport var incrementBy = function incrementBy(state, val) {\n  state.count += val;\n  state.lastMutation = 'IncrementBy' + val;\n  state.lastRandomInt = val;\n};\nexport var setLoading = function setLoading(state, val) {\n  state.isLoading = val;\n  state.lastMutation = 'setLoading' + val;\n};\n\n//sonj sincronas y hacen modificaciones del state","map":{"version":3,"names":["Uploadproducts","state","increment","count","lastMutation","incrementBy","val","lastRandomInt","setLoading","isLoading"],"sources":["/Users/davidsantos/Documents/ilercon/Users/src/modules/daybook/store/products/mutations.js"],"sourcesContent":["// export const myMutations =(state) => {\n\n\nexport const Uploadproducts = (state) => {\n\n\n}\n\n\n\n\nexport const increment = (state) => {\n    state.count++\n    state.lastMutation = 'Increment'\n}\n\n\nexport const incrementBy = (state, val) => {\n    state.count += val\n    state.lastMutation = 'IncrementBy' + val\n    state.lastRandomInt = val\n}\n\n\nexport const setLoading = (state, val) => {\n    state.isLoading = val\n    state.lastMutation = 'setLoading' + val\n}\n\n\n//sonj sincronas y hacen modificaciones del state"],"mappings":"AAAA;;AAGA,OAAO,IAAMA,cAAc,GAAG,SAAjBA,cAAc,CAAIC,KAAK,EAAK,CAGzC,CAAC;AAKD,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAS,CAAID,KAAK,EAAK;EAChCA,KAAK,CAACE,KAAK,EAAE;EACbF,KAAK,CAACG,YAAY,GAAG,WAAW;AACpC,CAAC;AAGD,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAW,CAAIJ,KAAK,EAAEK,GAAG,EAAK;EACvCL,KAAK,CAACE,KAAK,IAAIG,GAAG;EAClBL,KAAK,CAACG,YAAY,GAAG,aAAa,GAAGE,GAAG;EACxCL,KAAK,CAACM,aAAa,GAAGD,GAAG;AAC7B,CAAC;AAGD,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAU,CAAIP,KAAK,EAAEK,GAAG,EAAK;EACtCL,KAAK,CAACQ,SAAS,GAAGH,GAAG;EACrBL,KAAK,CAACG,YAAY,GAAG,YAAY,GAAGE,GAAG;AAC3C,CAAC;;AAGD"},"metadata":{},"sourceType":"module","externalDependencies":[]}