{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = buildMatchMemberExpression;\nvar _matchesPattern = require(\"./matchesPattern\");\nfunction buildMatchMemberExpression(match, allowPartial) {\n  var parts = match.split(\".\");\n  return function (member) {\n    return (0, _matchesPattern[\"default\"])(member, parts, allowPartial);\n  };\n}","map":{"version":3,"mappings":";;;;;;;AAAA;AAUe,SAASA,0BAA0B,CAChDC,KAAa,EACbC,YAAsB,EACtB;EACA,IAAMC,KAAK,GAAGF,KAAK,CAACG,KAAK,CAAC,GAAG,CAAC;EAE9B,OAAQC,gBAAc;IAAA,OAAK,8BAAc,EAACA,MAAM,EAAEF,KAAK,EAAED,YAAY,CAAC;EAAA;AACxE","names":["buildMatchMemberExpression","match","allowPartial","parts","split","member"],"sources":["../../src/validators/buildMatchMemberExpression.ts"],"sourcesContent":["import matchesPattern from \"./matchesPattern\";\nimport type * as t from \"..\";\n\n/**\n * Build a function that when called will return whether or not the\n * input `node` `MemberExpression` matches the input `match`.\n *\n * For example, given the match `React.createClass` it would match the\n * parsed nodes of `React.createClass` and `React[\"createClass\"]`.\n */\nexport default function buildMatchMemberExpression(\n  match: string,\n  allowPartial?: boolean,\n) {\n  const parts = match.split(\".\");\n\n  return (member: t.Node) => matchesPattern(member, parts, allowPartial);\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}