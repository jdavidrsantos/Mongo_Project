{"ast":null,"code":"import _regeneratorRuntime from \"/Users/davidsantos/Documents/ilercon/Users/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/davidsantos/Documents/ilercon/Users/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nvar datos = [];\nvar searchAllProducts = function searchAllProducts() {\n  fetch('http://localhost:3000/api/searchAllProducts'\n  // {\n  //     method: 'POST',\n  //     body: JSON.stringify(),\n  //     headers: {\n  //         'Accept': 'application/json',\n  //         'Content-Type': 'application/json'\n  //     }\n  // }\n  )\n  // .then(async (result) => result.json())\n  .then( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(response) {\n      var data;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return response.json();\n            case 2:\n              data = _context.sent;\n              if (data.status === 200) {\n                console.log('paso');\n              } else {\n                console.log('paso2');\n                // Rest of status codes (400,500,303), can be handled here appropriately\n              }\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }())[\"catch\"](function (err) {\n    console.log(err);\n  });\n  // .then(response => {\n  //     if (datos = []) {\n  //         setTimeout(() => {\n  //             datos = response\n  //             console.log('datos', datos)\n  //             return datos\n  //         }, 2000);\n  //     }\n  // })\n};\n\nexport default searchAllProducts;","map":{"version":3,"names":["datos","searchAllProducts","fetch","then","response","json","data","status","console","log","err"],"sources":["/Users/davidsantos/Documents/ilercon/Users/src/modules/main/helper/db/searchAllProducts.js"],"sourcesContent":["let datos = []\n\nconst searchAllProducts = () => {\n\n    fetch('http://localhost:3000/api/searchAllProducts',\n        // {\n        //     method: 'POST',\n        //     body: JSON.stringify(),\n        //     headers: {\n        //         'Accept': 'application/json',\n        //         'Content-Type': 'application/json'\n        //     }\n        // }\n    )\n        // .then(async (result) => result.json())\n        .then(async (response) => {\n\n            // get json response here\n            let data = await response.json();\n\n            if (data.status === 200) {\n                console.log('paso')\n            } else {\n                console.log('paso2')\n                // Rest of status codes (400,500,303), can be handled here appropriately\n            }\n\n        })\n        .catch((err) => {\n            console.log(err);\n        })\n    // .then(response => {\n    //     if (datos = []) {\n    //         setTimeout(() => {\n    //             datos = response\n    //             console.log('datos', datos)\n    //             return datos\n    //         }, 2000);\n    //     }\n    // })\n};\n\n\nexport default searchAllProducts\n\n\n\n\n"],"mappings":";;;AAAA,IAAIA,KAAK,GAAG,EAAE;AAEd,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiB,GAAS;EAE5BC,KAAK,CAAC;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;EAEA;EAAA,CACCC,IAAI;IAAA,sEAAC,iBAAOC,QAAQ;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OAGAA,QAAQ,CAACC,IAAI,EAAE;YAAA;cAA5BC,IAAI;cAER,IAAIA,IAAI,CAACC,MAAM,KAAK,GAAG,EAAE;gBACrBC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;cACvB,CAAC,MAAM;gBACHD,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;gBACpB;cACJ;YAAC;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAEJ;IAAA;MAAA;IAAA;EAAA,IAAC,SACI,CAAC,UAACC,GAAG,EAAK;IACZF,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;EACpB,CAAC,CAAC;EACN;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ,CAAC;;AAGD,eAAeT,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}