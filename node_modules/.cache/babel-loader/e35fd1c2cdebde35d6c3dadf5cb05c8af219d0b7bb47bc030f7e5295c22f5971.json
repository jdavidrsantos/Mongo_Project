{"ast":null,"code":"'use strict';\n\n/* global self */\nrequire(\"core-js/modules/es.regexp.exec.js\");\nrequire(\"core-js/modules/es.string.replace.js\");\nrequire(\"core-js/modules/es.string.substr.js\");\nrequire(\"core-js/modules/es.array.index-of.js\");\nvar url = require('url');\nvar getCurrentScriptSource = require('./getCurrentScriptSource');\nfunction createSocketUrl(resourceQuery, currentLocation) {\n  var urlParts;\n  if (typeof resourceQuery === 'string' && resourceQuery !== '') {\n    // If this bundle is inlined, use the resource query to get the correct url.\n    // format is like `?http://0.0.0.0:8096&sockPort=8097&sockHost=localhost`\n    urlParts = url.parse(resourceQuery // strip leading `?` from query string to get a valid URL\n    .substr(1) // replace first `&` with `?` to have a valid query string\n    .replace('&', '?'), true);\n  } else {\n    // Else, get the url from the <script> this file was called with.\n    var scriptHost = getCurrentScriptSource();\n    urlParts = url.parse(scriptHost || '/', true, true);\n  } // Use parameter to allow passing location in unit tests\n\n  if (typeof currentLocation === 'string' && currentLocation !== '') {\n    currentLocation = url.parse(currentLocation);\n  } else {\n    currentLocation = self.location;\n  }\n  return getSocketUrl(urlParts, currentLocation);\n}\n/*\n * Gets socket URL based on Script Source/Location\n * (scriptSrc: URL, location: URL) -> URL\n */\n\nfunction getSocketUrl(urlParts, loc) {\n  var auth = urlParts.auth,\n    query = urlParts.query;\n  var hostname = urlParts.hostname,\n    protocol = urlParts.protocol,\n    port = urlParts.port;\n  if (!port || port === '0') {\n    port = loc.port;\n  } // check ipv4 and ipv6 `all hostname`\n  // why do we need this check?\n  // hostname n/a for file protocol (example, when using electron, ionic)\n  // see: https://github.com/webpack/webpack-dev-server/pull/384\n\n  if ((hostname === '0.0.0.0' || hostname === '::') && loc.hostname && loc.protocol.indexOf('http') === 0) {\n    hostname = loc.hostname;\n  } // `hostname` can be empty when the script path is relative. In that case, specifying\n  // a protocol would result in an invalid URL.\n  // When https is used in the app, secure websockets are always necessary\n  // because the browser doesn't accept non-secure websockets.\n\n  if (hostname && hostname !== '127.0.0.1' && (loc.protocol === 'https:' || urlParts.hostname === '0.0.0.0')) {\n    protocol = loc.protocol;\n  } // all of these sock url params are optionally passed in through\n  // resourceQuery, so we need to fall back to the default if\n  // they are not provided\n\n  var sockHost = query.sockHost || hostname;\n  var sockPath = query.sockPath || '/sockjs-node';\n  var sockPort = query.sockPort || port;\n  if (sockPort === 'location') {\n    sockPort = loc.port;\n  }\n  return url.format({\n    protocol: protocol,\n    auth: auth,\n    hostname: sockHost,\n    port: sockPort,\n    // If sockPath is provided it'll be passed in via the resourceQuery as a\n    // query param so it has to be parsed out of the querystring in order for the\n    // client to open the socket to the correct location.\n    pathname: sockPath\n  });\n}\nmodule.exports = createSocketUrl;","map":{"version":3,"names":["url","require","getCurrentScriptSource","createSocketUrl","resourceQuery","currentLocation","urlParts","parse","substr","replace","scriptHost","self","location","getSocketUrl","loc","auth","query","hostname","protocol","port","indexOf","sockHost","sockPath","sockPort","format","pathname","module","exports"],"sources":["/Users/davidsantos/Documents/ilercon/Users/node_modules/webpack-dev-server/client/utils/createSocketUrl.js"],"sourcesContent":["'use strict';\n/* global self */\n\nvar url = require('url');\n\nvar getCurrentScriptSource = require('./getCurrentScriptSource');\n\nfunction createSocketUrl(resourceQuery, currentLocation) {\n  var urlParts;\n\n  if (typeof resourceQuery === 'string' && resourceQuery !== '') {\n    // If this bundle is inlined, use the resource query to get the correct url.\n    // format is like `?http://0.0.0.0:8096&sockPort=8097&sockHost=localhost`\n    urlParts = url.parse(resourceQuery // strip leading `?` from query string to get a valid URL\n    .substr(1) // replace first `&` with `?` to have a valid query string\n    .replace('&', '?'), true);\n  } else {\n    // Else, get the url from the <script> this file was called with.\n    var scriptHost = getCurrentScriptSource();\n    urlParts = url.parse(scriptHost || '/', true, true);\n  } // Use parameter to allow passing location in unit tests\n\n\n  if (typeof currentLocation === 'string' && currentLocation !== '') {\n    currentLocation = url.parse(currentLocation);\n  } else {\n    currentLocation = self.location;\n  }\n\n  return getSocketUrl(urlParts, currentLocation);\n}\n/*\n * Gets socket URL based on Script Source/Location\n * (scriptSrc: URL, location: URL) -> URL\n */\n\n\nfunction getSocketUrl(urlParts, loc) {\n  var auth = urlParts.auth,\n      query = urlParts.query;\n  var hostname = urlParts.hostname,\n      protocol = urlParts.protocol,\n      port = urlParts.port;\n\n  if (!port || port === '0') {\n    port = loc.port;\n  } // check ipv4 and ipv6 `all hostname`\n  // why do we need this check?\n  // hostname n/a for file protocol (example, when using electron, ionic)\n  // see: https://github.com/webpack/webpack-dev-server/pull/384\n\n\n  if ((hostname === '0.0.0.0' || hostname === '::') && loc.hostname && loc.protocol.indexOf('http') === 0) {\n    hostname = loc.hostname;\n  } // `hostname` can be empty when the script path is relative. In that case, specifying\n  // a protocol would result in an invalid URL.\n  // When https is used in the app, secure websockets are always necessary\n  // because the browser doesn't accept non-secure websockets.\n\n\n  if (hostname && hostname !== '127.0.0.1' && (loc.protocol === 'https:' || urlParts.hostname === '0.0.0.0')) {\n    protocol = loc.protocol;\n  } // all of these sock url params are optionally passed in through\n  // resourceQuery, so we need to fall back to the default if\n  // they are not provided\n\n\n  var sockHost = query.sockHost || hostname;\n  var sockPath = query.sockPath || '/sockjs-node';\n  var sockPort = query.sockPort || port;\n\n  if (sockPort === 'location') {\n    sockPort = loc.port;\n  }\n\n  return url.format({\n    protocol: protocol,\n    auth: auth,\n    hostname: sockHost,\n    port: sockPort,\n    // If sockPath is provided it'll be passed in via the resourceQuery as a\n    // query param so it has to be parsed out of the querystring in order for the\n    // client to open the socket to the correct location.\n    pathname: sockPath\n  });\n}\n\nmodule.exports = createSocketUrl;"],"mappings":"AAAA,YAAY;;AACZ;AAAA;AAAA;AAAA;AAAA;AAEA,IAAIA,GAAG,GAAGC,OAAO,CAAC,KAAK,CAAC;AAExB,IAAIC,sBAAsB,GAAGD,OAAO,CAAC,0BAA0B,CAAC;AAEhE,SAASE,eAAe,CAACC,aAAa,EAAEC,eAAe,EAAE;EACvD,IAAIC,QAAQ;EAEZ,IAAI,OAAOF,aAAa,KAAK,QAAQ,IAAIA,aAAa,KAAK,EAAE,EAAE;IAC7D;IACA;IACAE,QAAQ,GAAGN,GAAG,CAACO,KAAK,CAACH,aAAa,CAAC;IAAA,CAClCI,MAAM,CAAC,CAAC,CAAC,CAAC;IAAA,CACVC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC;EAC3B,CAAC,MAAM;IACL;IACA,IAAIC,UAAU,GAAGR,sBAAsB,EAAE;IACzCI,QAAQ,GAAGN,GAAG,CAACO,KAAK,CAACG,UAAU,IAAI,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC;EACrD,CAAC,CAAC;;EAGF,IAAI,OAAOL,eAAe,KAAK,QAAQ,IAAIA,eAAe,KAAK,EAAE,EAAE;IACjEA,eAAe,GAAGL,GAAG,CAACO,KAAK,CAACF,eAAe,CAAC;EAC9C,CAAC,MAAM;IACLA,eAAe,GAAGM,IAAI,CAACC,QAAQ;EACjC;EAEA,OAAOC,YAAY,CAACP,QAAQ,EAAED,eAAe,CAAC;AAChD;AACA;AACA;AACA;AACA;;AAGA,SAASQ,YAAY,CAACP,QAAQ,EAAEQ,GAAG,EAAE;EACnC,IAAIC,IAAI,GAAGT,QAAQ,CAACS,IAAI;IACpBC,KAAK,GAAGV,QAAQ,CAACU,KAAK;EAC1B,IAAIC,QAAQ,GAAGX,QAAQ,CAACW,QAAQ;IAC5BC,QAAQ,GAAGZ,QAAQ,CAACY,QAAQ;IAC5BC,IAAI,GAAGb,QAAQ,CAACa,IAAI;EAExB,IAAI,CAACA,IAAI,IAAIA,IAAI,KAAK,GAAG,EAAE;IACzBA,IAAI,GAAGL,GAAG,CAACK,IAAI;EACjB,CAAC,CAAC;EACF;EACA;EACA;;EAGA,IAAI,CAACF,QAAQ,KAAK,SAAS,IAAIA,QAAQ,KAAK,IAAI,KAAKH,GAAG,CAACG,QAAQ,IAAIH,GAAG,CAACI,QAAQ,CAACE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;IACvGH,QAAQ,GAAGH,GAAG,CAACG,QAAQ;EACzB,CAAC,CAAC;EACF;EACA;EACA;;EAGA,IAAIA,QAAQ,IAAIA,QAAQ,KAAK,WAAW,KAAKH,GAAG,CAACI,QAAQ,KAAK,QAAQ,IAAIZ,QAAQ,CAACW,QAAQ,KAAK,SAAS,CAAC,EAAE;IAC1GC,QAAQ,GAAGJ,GAAG,CAACI,QAAQ;EACzB,CAAC,CAAC;EACF;EACA;;EAGA,IAAIG,QAAQ,GAAGL,KAAK,CAACK,QAAQ,IAAIJ,QAAQ;EACzC,IAAIK,QAAQ,GAAGN,KAAK,CAACM,QAAQ,IAAI,cAAc;EAC/C,IAAIC,QAAQ,GAAGP,KAAK,CAACO,QAAQ,IAAIJ,IAAI;EAErC,IAAII,QAAQ,KAAK,UAAU,EAAE;IAC3BA,QAAQ,GAAGT,GAAG,CAACK,IAAI;EACrB;EAEA,OAAOnB,GAAG,CAACwB,MAAM,CAAC;IAChBN,QAAQ,EAAEA,QAAQ;IAClBH,IAAI,EAAEA,IAAI;IACVE,QAAQ,EAAEI,QAAQ;IAClBF,IAAI,EAAEI,QAAQ;IACd;IACA;IACA;IACAE,QAAQ,EAAEH;EACZ,CAAC,CAAC;AACJ;AAEAI,MAAM,CAACC,OAAO,GAAGxB,eAAe"},"metadata":{},"sourceType":"script","externalDependencies":[]}