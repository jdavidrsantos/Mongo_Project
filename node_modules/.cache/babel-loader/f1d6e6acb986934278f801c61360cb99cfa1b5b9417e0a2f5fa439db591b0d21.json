{"ast":null,"code":"import _objectSpread from \"/Users/davidsantos/Documents/ilercon/Users/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.array.push.js\";\n// import { defineAsyncComponent } from 'vue'\n\nimport { mapState, mapActions, mapGetters } from 'vuex';\nimport products from '../store/products';\nexport default {\n  data: function data() {\n    return {\n      descriptionProducts: {}\n    };\n  },\n  mounted: function mounted() {\n    this.loadproducts();\n    // this.upload()\n    console.log('mounted');\n    this.descriptions();\n  },\n  created: function created() {\n    // this.descriptions()\n    //   this.upload()\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters('products', ['articles'])), {}, {\n    get: function get() {\n      return this.$store.getters.products, ['articles'];\n    }\n  }),\n  methods: {\n    isValidDescription: function isValidDescription(description) {\n      return description.length > 50 ? description.substring(0, 100) + '...' : description;\n    },\n    loadproducts: function loadproducts() {\n      this.$store.dispatch('products/loadproducts');\n      console.log('lo llamo');\n    },\n    upload: function upload() {\n      this.$store.commit('products/Uploadproduct');\n      console.log('uploads');\n    },\n    // mounting(){\n    //     this.articles.description === 'hi' ? this.articles : this.articles\n    //     console.log('yes david',this. descriptionProducts)\n    //         },\n    descriptions: function descriptions() {\n      var _this = this;\n      var result = [];\n      console.log('1');\n      var description = this.articles.map(function (descrip, index) {\n        description = {\n          id: index,\n          description: descrip.description\n        };\n        if (description.id === 0) {\n          console.log('llorelo', description);\n          _this.get;\n          // this.$store.getters.products,['/articles']\n        }\n\n        if (description.description.length > 5 && description.id === index) {\n          result.push({\n            description: description.description.substring(0, 100) + '...',\n            id: index\n          });\n          _this.descriptionProducts = result;\n          console.log('soy data', _this.descriptionProducts);\n          // this.descriptionProducts = description\n        } else {\n          _this.descriptionProducts = description.description;\n        }\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;AA+CI;;AAEJ,SAASA,QAAQ,EAAEC,UAAU,EAAEC,UAAS,QAAS,MAAM;AACvD,OAASC,QAAO,MAAO,mBAAmB;AAE1C,eAAe;EAGXC,IAAI,kBAAG;IACH,OAAO;MACHC,mBAAmB,EAAE,CAAC;IAC1B;EACJ,CAAC;EAGDC,OAAO,qBAAE;IAEL,IAAI,CAACC,YAAY,EAAC;IACtB;IACAC,OAAO,CAACC,GAAG,CAAC,SAAS;IACrB,IAAI,CAACC,YAAY,EAAC;EAEnB,CAAC;EAEDC,OAAO,qBAAE;IACR;IACA;EAAA,CACA;EAIJC,QAAQ,kCACDV,UAAU,CAAC,UAAU,EAAC,CAAC,UAAU,CAAC,CAAC;IACtCW,GAAG,iBAAE;MAAE,OAAO,IAAI,CAACC,MAAM,CAACC,OAAO,CAACZ,QAAQ,EAAC,CAAC,UAAU;IAAE;EAAA,EAC3D;EAGDa,OAAO,EAAE;IACLC,kBAAkB,8BAACC,WAAW,EAAC;MAC3B,OAAOA,WAAW,CAACC,MAAK,GAAI,EAAC,GAAID,WAAW,CAACE,SAAS,CAAC,CAAC,EAAE,GAAG,IAAI,KAAK,GAAEF,WAAU;IACtF,CAAC;IAEDX,YAAY,0BAAE;MACT,IAAI,CAACO,MAAM,CAACO,QAAO,CAAG,uBAAuB;MAC7Cb,OAAO,CAACC,GAAG,CAAC,UAAU;IACP,CAAC;IAErBa,MAAM,oBAAE;MACH,IAAI,CAACR,MAAM,CAACS,MAAM,CAAC,wBAAwB;MAC3Cf,OAAO,CAACC,GAAG,CAAC,SAAS;IACd,CAAC;IAGb;IACA;IACA;IACA;IAEQC,YAAW,0BAAK;MAAA;MAChB,IAAIc,MAAM,GAAE,EAAC;MACbhB,OAAO,CAACC,GAAG,CAAC,GAAG;MACf,IAAIS,WAAU,GAAK,IAAI,CAACO,QAAQ,CAACC,GAAG,CAAC,UAACC,OAAO,EAAEC,KAAK,EAAK;QACrDV,WAAU,GAAK;UAAEW,EAAC,EAAID,KAAK;UACVV,WAAW,EAAES,OAAO,CAACT;QACtB;QACpB,IAAIA,WAAW,CAACW,EAAE,KAAG,CAAC,EAAC;UACnBrB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAES,WAAW;UAClC,KAAI,CAACL,GAAE;UACP;QACJ;;QAEA,IAAGK,WAAW,CAACA,WAAW,CAACC,MAAK,GAAI,KAAKD,WAAW,CAACW,EAAC,KAAMD,KAAK,EAAC;UAC/DJ,MAAM,CAACM,IAAI,CAAE;YACZZ,WAAW,EAAEA,WAAW,CAACA,WAAW,CAACE,SAAS,CAAC,CAAC,EAAE,GAAG,IAAI,KAAK;YAC9DS,EAAC,EAAID;UACO,EAAE;UACf,KAAI,CAAEvB,mBAAkB,GAAImB,MAAK;UACjChB,OAAO,CAACC,GAAG,CAAC,UAAU,EAAC,KAAI,CAAEJ,mBAAkB,CAAE;UAChD;QAED,CAAC,MAAI;UACJ,KAAI,CAACA,mBAAkB,GAAIa,WAAW,CAACA,WAAU;QACzC;MAEJ,CAAC;IACD;EAIV;AAEF","names":["mapState","mapActions","mapGetters","products","data","descriptionProducts","mounted","loadproducts","console","log","descriptions","created","computed","get","$store","getters","methods","isValidDescription","description","length","substring","dispatch","upload","commit","result","articles","map","descrip","index","id","push"],"sourceRoot":"","sources":["/Users/davidsantos/Documents/ilercon/Users/src/modules/daybook/views/Products.vue"],"sourcesContent":["<!-- eslint-disable vue/multi-word-component-names -->\n<template>\n    <div>\n     <!-- <h2>getter {{articles}}</h2>  -->\n \n<div class=\"container-fluid\">\n    <div class=\"row\">\n                <table v-for=\" (products, index) in articles\" :key=\"index\" class=\"table table-style\">\n                    <thead>\n                        <tr class=\"text-center aligning align-middle\">\n                        <th scope=\"col\">{{products.title}}</th>\n                        </tr>\n                    </thead>\n                        <tbody class=\"text-center\">\n                            <tr>\n                            <td> \n                                <img class=\"productsImage\" :src=\"`${products.image}`\" alt=\"products\" />\n                             </td>\n                            </tr>\n                             <tr v-for=\"(produ, index) in this.descriptionProducts\" :key=\"(index)\" >\n                            <td v-if=\"(products.id == produ.id+1)\"> {{(produ.description)}}</td> \n                             </tr>\n                            <tr>\n                                <!-- <td>{{products.description.length > 50 ? products.description.substring(0, 100) + '...': products.description}}</td> -->\n                            <!-- <td v-if=\"products.description\">{{isValidDescription(products.description)}}</td> -->\n                            </tr>\n                            <tr>\n                            <td class=\"boldPrice\"> {{ '$ '+ products.price}}</td>\n                            </tr>\n                        </tbody>\n               </table>\n    </div>  \n\n</div>\n\n <!-- <img :src=\"require(articles.image)\">  -->\n<button @click=\"descriptions()\">descripcion</button>\n<h3>{{this.$store.getters.products.articles}}</h3>\n \n    </div>\n   \n</template>\n\n\n<script>\n\n\n    // import { defineAsyncComponent } from 'vue'\n\nimport { mapState, mapActions, mapGetters } from 'vuex';\nimport   products from '../store/products';\n\nexport default {\n\n\n    data() {\n        return {\n            descriptionProducts: {},\n        }\n    },\n\n\n    mounted(){\n        \n        this.loadproducts()\n    // this.upload()\n    console.log('mounted')\n    this.descriptions()\n\n   },\n\n   created(){\n    // this.descriptions()\n    //   this.upload()\n   },\n\n\n\ncomputed:{\n    ...mapGetters('products',['articles']),\n    get(){ return this.$store.getters.products,['articles'] }\n},\n\n\nmethods: {\n    isValidDescription(description){\n        return description.length > 50 ? description.substring(0, 100) + '...': description\n    },\n\n    loadproducts(){\n         this.$store.dispatch ('products/loadproducts')\n         console.log('lo llamo')\n                        },\n\n    upload(){\n         this.$store.commit('products/Uploadproduct')\n         console.log('uploads')\n                },\n\n\n    // mounting(){\n    //     this.articles.description === 'hi' ? this.articles : this.articles\n    //     console.log('yes david',this. descriptionProducts)\n    //         },\n \n            descriptions () {\n            let result= []\n            console.log('1')\n            let description =  this.articles.map((descrip, index) => {\n                description =  { id : index,\n                                 description: descrip.description\n                                }\n            if (description.id===0){\n                console.log('llorelo', description)\n                this.get\n                // this.$store.getters.products,['/articles']\n            }\n\n            if(description.description.length > 5 && description.id === index){    \n               result.push( {\n                description: description.description.substring(0, 100) + '...',\n                id : index\n                            } )\n               this. descriptionProducts = result\n               console.log('soy data',this. descriptionProducts )\n                // this.descriptionProducts = description\n             \n               }else{\n                this.descriptionProducts = description.description\n                        }  \n                        \n                    }) \n                    }\n\n\n\n          },\n\n        }\n\n\n\n\n</script>\n\n<style lang=\"scss\" scoped>\n\n.table{\nwidth: 33%;\n}\n\n.productsImage{\n    width:  200px;\n    height: 300px;\n    // object-fit: cover;\n    overflow: hidden;\n\n}\n.productsImage img{\n height: auto;\n width:  200px;\n\n}\n.aligning{\n    height: 6rem;\n    justify-content: center;\n    \n}\n.boldPrice{\n    font-weight: bold;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}