{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.object.define-property.js\");\nrequire(\"core-js/modules/es.json.stringify.js\");\nrequire(\"core-js/modules/es.error.cause.js\");\nrequire(\"core-js/modules/es.error.to-string.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = assertNode;\nvar _isNode = require(\"../validators/isNode\");\nfunction assertNode(node) {\n  if (!(0, _isNode[\"default\"])(node)) {\n    var _node$type;\n    var type = (_node$type = node == null ? void 0 : node.type) != null ? _node$type : JSON.stringify(node);\n    throw new TypeError(\"Not a valid node of type \\\"\".concat(type, \"\\\"\"));\n  }\n}","map":{"version":3,"mappings":";;;;;;;;;;AAAA;AAGe,SAASA,UAAU,CAACC,IAAU,EAA0B;EACrE,IAAI,CAAC,sBAAM,EAACA,IAAI,CAAC,EAAE;IAAA;IACjB,IAAMC,IAAI,iBAAGD,IAAI,oBAAJA,IAAI,CAAEC,IAAI,yBAAIC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC;IAC/C,MAAM,IAAII,SAAS,sCAA8BH,IAAY,QAAG;EAClE;AACF","names":["assertNode","node","type","JSON","stringify","TypeError"],"sources":["../../src/asserts/assertNode.ts"],"sourcesContent":["import isNode from \"../validators/isNode\";\nimport type * as t from \"..\";\n\nexport default function assertNode(node?: any): asserts node is t.Node {\n  if (!isNode(node)) {\n    const type = node?.type ?? JSON.stringify(node);\n    throw new TypeError(`Not a valid node of type \"${type as any}\"`);\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}