{"ast":null,"code":"// export const myMutations =(state) => {\nexport var increment = function increment(state) {\n  state.count++;\n  state.lastMutation = 'Increment';\n};\nexport var incrementBy = function incrementBy(state, val) {\n  state.count += val;\n  state.lastMutation = 'IncrementBy' + val;\n  state.lastRandomInt = val;\n};\nexport var setLoading = function setLoading(state, val) {\n  state.isLoading = val;\n  state.lastMutation = 'setLoading' + val;\n};\n\n//sonj sincronas y hacen modificaciones del state","map":{"version":3,"names":["increment","state","count","lastMutation","incrementBy","val","lastRandomInt","setLoading","isLoading"],"sources":["/Users/davidsantos/Documents/ilercon/Users/src/modules/daybook/store/journal/mutations.js"],"sourcesContent":["// export const myMutations =(state) => {\n    export const increment = (state) => {\n        state.count++\n        state.lastMutation = 'Increment'\n    }\n    \n    \n    export const incrementBy = (state, val) => {\n        state.count += val\n        state.lastMutation = 'IncrementBy' + val\n        state.lastRandomInt = val\n    }\n    \n    \n    export const setLoading = (state, val) => {\n        state.isLoading = val\n        state.lastMutation = 'setLoading' + val\n    }\n\n\n//sonj sincronas y hacen modificaciones del state"],"mappings":"AAAA;AACI,OAAO,IAAMA,SAAS,GAAG,SAAZA,SAAS,CAAIC,KAAK,EAAK;EAChCA,KAAK,CAACC,KAAK,EAAE;EACbD,KAAK,CAACE,YAAY,GAAG,WAAW;AACpC,CAAC;AAGD,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAW,CAAIH,KAAK,EAAEI,GAAG,EAAK;EACvCJ,KAAK,CAACC,KAAK,IAAIG,GAAG;EAClBJ,KAAK,CAACE,YAAY,GAAG,aAAa,GAAGE,GAAG;EACxCJ,KAAK,CAACK,aAAa,GAAGD,GAAG;AAC7B,CAAC;AAGD,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAU,CAAIN,KAAK,EAAEI,GAAG,EAAK;EACtCJ,KAAK,CAACO,SAAS,GAAGH,GAAG;EACrBJ,KAAK,CAACE,YAAY,GAAG,YAAY,GAAGE,GAAG;AAC3C,CAAC;;AAGL"},"metadata":{},"sourceType":"module","externalDependencies":[]}