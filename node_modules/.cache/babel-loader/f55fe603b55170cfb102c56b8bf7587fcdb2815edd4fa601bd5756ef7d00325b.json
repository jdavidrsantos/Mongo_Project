{"ast":null,"code":"import \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.fill.js\";\nvar items = new Array(100).fill(null).map(function (item, index) {\n  return {\n    id: index,\n    value: \"Item \" + index\n  };\n});\n\n// https://stackoverflow.com/questions/5685589/scroll-to-element-only-if-not-in-view-jquery\nfunction scrollIntoViewIfNeeded(target) {\n  var rect = target.getBoundingClientRect();\n  if (rect.bottom > window.innerHeight) {\n    target.scrollIntoView(false);\n  }\n  if (rect.top < 0) {\n    target.scrollIntoView();\n  }\n}\nexport default {\n  data: function data() {\n    return {\n      items: items,\n      selectedId: 0\n    };\n  },\n  methods: {\n    select: function select(itemId) {\n      this.selectedId = itemId;\n      scrollIntoViewIfNeeded(this.$refs.root.children[itemId]);\n      // this.$refs.root.children[item.id].scrollIntoView({ behavior: \"smooth\" });\n    },\n    handleKeyDown: function handleKeyDown(event) {\n      switch (event.keyCode) {\n        // In case of left arrow key move to the last item\n        case 37:\n          if (this.selectedId > 0) {\n            this.select(this.selectedId - 1);\n          }\n          // Prevent the default scroll event from firing\n          event.preventDefault();\n          break;\n        // In case of up arrow key, move to the last item\n        case 38:\n          if (this.selectedId > 0) {\n            this.select(this.selectedId - 1);\n          }\n          event.preventDefault();\n          break;\n        // In case of right arrow key, move to the next item\n        case 39:\n          if (this.selectedId < this.items.length - 1) {\n            this.select(this.selectedId + 1);\n          }\n          event.preventDefault();\n          break;\n        // In case of down arrow key, move to the next item\n        case 40:\n          if (this.selectedId < this.items.length - 1) {\n            this.select(this.selectedId + 1);\n          }\n          event.preventDefault();\n          break;\n      }\n    }\n  },\n  mounted: function mounted() {\n    window.addEventListener(\"keydown\", this.handleKeyDown);\n  },\n  destroyed: function destroyed() {\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n};","map":{"version":3,"mappings":";;AAkBA,IAAMA,KAAI,GAAI,IAAIC,KAAK,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAACC,GAAG,CAAC,UAACC,IAAI,EAAEC,KAAK,EAAK;EAC3D,OAAO;IAAEC,EAAE,EAAED,KAAK;IAAEE,KAAK,EAAE,OAAM,GAAIF;EAAM,CAAC;AAC9C,CAAC,CAAC;;AAEF;AACA,SAASG,sBAAsB,CAACC,MAAM,EAAE;EACpC,IAAIC,IAAG,GAAID,MAAM,CAACE,qBAAqB,EAAE;EACzC,IAAID,IAAI,CAACE,MAAK,GAAIC,MAAM,CAACC,WAAW,EAAE;IAClCL,MAAM,CAACM,cAAc,CAAC,KAAK,CAAC;EAChC;EACA,IAAIL,IAAI,CAACM,GAAE,GAAI,CAAC,EAAE;IACdP,MAAM,CAACM,cAAc,EAAE;EAC3B;AACJ;AAEA,eAAe;EACbE,IAAI,kBAAG;IACL,OAAO;MACLjB,KAAK,EAALA,KAAK;MACLkB,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,MAAM,kBAACC,MAAM,EAAE;MACb,IAAI,CAACH,UAAS,GAAIG,MAAM;MACxBb,sBAAsB,CAAC,IAAI,CAACc,KAAK,CAACC,IAAI,CAACC,QAAQ,CAACH,MAAM,CAAC;MACvD;IACF,CAAC;IACDI,aAAa,yBAACC,KAAK,EAAE;MACnB,QAAQA,KAAK,CAACC,OAAO;QACnB;QACA,KAAK,EAAE;UACL,IAAI,IAAI,CAACT,UAAS,GAAI,CAAC,EAAE;YACvB,IAAI,CAACE,MAAM,CAAC,IAAI,CAACF,UAAS,GAAI,CAAC,CAAC;UAClC;UACA;UACAQ,KAAK,CAACE,cAAc,EAAE;UACtB;QACF;QACA,KAAK,EAAE;UACL,IAAI,IAAI,CAACV,UAAS,GAAI,CAAC,EAAE;YACvB,IAAI,CAACE,MAAM,CAAC,IAAI,CAACF,UAAS,GAAI,CAAC,CAAC;UAClC;UACAQ,KAAK,CAACE,cAAc,EAAE;UACtB;QACF;QACA,KAAK,EAAE;UACL,IAAI,IAAI,CAACV,UAAS,GAAI,IAAI,CAAClB,KAAK,CAAC6B,MAAK,GAAI,CAAC,EAAE;YAC3C,IAAI,CAACT,MAAM,CAAC,IAAI,CAACF,UAAS,GAAI,CAAC,CAAC;UAClC;UACAQ,KAAK,CAACE,cAAc,EAAE;UACtB;QACF;QACA,KAAK,EAAE;UACL,IAAI,IAAI,CAACV,UAAS,GAAI,IAAI,CAAClB,KAAK,CAAC6B,MAAK,GAAI,CAAC,EAAE;YAC3C,IAAI,CAACT,MAAM,CAAC,IAAI,CAACF,UAAS,GAAI,CAAC,CAAC;UAClC;UACAQ,KAAK,CAACE,cAAc,EAAE;UACtB;MAAK;IAEX;EACF,CAAC;EACDE,OAAO,qBAAG;IACRjB,MAAM,CAACkB,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAACN,aAAa,CAAC;EACxD,CAAC;EACDO,SAAS,uBAAG;IACVnB,MAAM,CAACoB,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAACR,aAAa,CAAC;EAC3D;AACF","names":["items","Array","fill","map","item","index","id","value","scrollIntoViewIfNeeded","target","rect","getBoundingClientRect","bottom","window","innerHeight","scrollIntoView","top","data","selectedId","methods","select","itemId","$refs","root","children","handleKeyDown","event","keyCode","preventDefault","length","mounted","addEventListener","destroyed","removeEventListener"],"sourceRoot":"","sources":["/Users/davidsantos/Documents/ilercon/Users/src/modules/daybook/components/ShopCar.vue"],"sourcesContent":["<!-- eslint-disable vue/multi-word-component-names -->\n<template>\n<div>\n<input type=\"text/x-template\" id=\"list\"> \n  <div id=\"list-container\" ref=\"root\">\n    <div v-for=\"item in items\" :key=\"item.id\" class=\"list-item\" :class=\"item.id === selectedId ? 'selected': ''\" @click=\"select(item.id)\">\n      {{item.value}}\n    </div>\n  </div>\n\n\n\n\n</div>\n\n</template>\n\n<script>\nconst items = new Array(100).fill(null).map((item, index) => {\n  return { id: index, value: \"Item \" + index };\n});\n\n// https://stackoverflow.com/questions/5685589/scroll-to-element-only-if-not-in-view-jquery\nfunction scrollIntoViewIfNeeded(target) {\n    var rect = target.getBoundingClientRect();\n    if (rect.bottom > window.innerHeight) {\n        target.scrollIntoView(false);\n    }\n    if (rect.top < 0) {\n        target.scrollIntoView();\n    } \n}\n\nexport default {\n  data() {\n    return {\n      items,\n      selectedId: 0\n    };\n  },\n  methods: {\n    select(itemId) {\n      this.selectedId = itemId;\n      scrollIntoViewIfNeeded(this.$refs.root.children[itemId])\n      // this.$refs.root.children[item.id].scrollIntoView({ behavior: \"smooth\" });\n    },\n    handleKeyDown(event) {\n      switch (event.keyCode) {\n        // In case of left arrow key move to the last item\n        case 37:\n          if (this.selectedId > 0) {\n            this.select(this.selectedId - 1);\n          }\n          // Prevent the default scroll event from firing\n          event.preventDefault();\n          break;\n        // In case of up arrow key, move to the last item\n        case 38:\n          if (this.selectedId > 0) {\n            this.select(this.selectedId - 1);\n          }\n          event.preventDefault();\n          break;\n        // In case of right arrow key, move to the next item\n        case 39:\n          if (this.selectedId < this.items.length - 1) {\n            this.select(this.selectedId + 1);\n          }\n          event.preventDefault();\n          break;\n        // In case of down arrow key, move to the next item\n        case 40:\n          if (this.selectedId < this.items.length - 1) {\n            this.select(this.selectedId + 1);\n          }\n          event.preventDefault();\n          break;\n      }\n    }\n  },\n  mounted() {\n    window.addEventListener(\"keydown\", this.handleKeyDown);\n  },\n  destroyed() {\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n}\n\n</script>\n\n\n<style lang=\"scss\" scoped>\n\n* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n}\n\nhtml {\n  height: 100%;\n}\n\nbody {\n  height: 100%;\n  min-height: 100%;\n  padding: 1rem;\n  font-family: 'Tahoma', sans-serif;\n}\n\n.list-item {\n  padding: 1rem 0.25rem;\n}\n\n.selected {\n  background: lightyellow;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}